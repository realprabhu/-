// ping.js

const { cmd } = require('../command');

// Register the "ping" command to check bot latency
cmd({
    pattern: "ping",
    desc: "Check bot latency",
    category: "info", // Category for general information
    filename: __filename
},
async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, reply }) => {
    try {
        await m.react("üèì");

        // Record the start time
        const startTime = Date.now();

        // Send a temporary response to calculate latency
        await reply("üèì ·¥ò…™…¥…¢…™…¥…¢...");

        // Calculate the round trip time (RTT)
        const pingTime = Date.now() - startTime;

        // Prepare the status message with latency
        const statusMessage = `> Ôº∑ ú…™Íú±·¥ò·¥á Ä ·¥π·¥∞üßö‚Äç‚ôÄÔ∏è

‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚úë

üèì ·¥ò·¥è…¥…¢!  ü·¥Ä·¥õ·¥á…¥·¥Ñ è : ${pingTime}ms

‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚úë

üåª·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á·¥Ö  ô è Ôº£ ú·¥Ä Ä·¥ú·¥ã·¥Ä‚ú®

‚ú® ü·¥ÄÍú±·¥õ ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á 2025/01/05üåª

> Ôº∞·¥è·¥°·¥á Ä·¥á·¥Ö Ôº¢ è  Ôº£ ú·¥Ä Ä·¥ú·¥ã·¥Ä ·µÄ·¥πüßö‚Äç‚ôÄÔ∏è
        `;

        // Send the final response
        reply(statusMessage);
    } catch (e) {
        console.error(e);
        reply(`Error occurred: ${e}`);
    }
});
